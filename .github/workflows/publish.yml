name: Publish to Maven Central and Plugin Portal

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Build and test
        run: ./gradlew clean build test
        env:
          CI: true

      - name: Determine release type
        id: release_type
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          if [[ $TAG_NAME =~ -alpha|-beta|-gamma|-dev|-rc\. ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
            echo "This is a pre-release: $TAG_NAME"
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
            echo "This is a stable release: $TAG_NAME"
          fi

      - name: Publish to Maven Central
        id: maven_central
        continue-on-error: true
        timeout-minutes: 10
        run: |
          echo "🚀 Publishing to Maven Central..."
          ./gradlew publishAllPublicationsToStagingRepository
          
          echo "📦 Deploying to Maven Central..."
          ./gradlew jreleaserDeploy --info | tee deployment.log
        env:
          CI: true
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_MAVENCENTRAL_SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          JRELEASER_MAVENCENTRAL_SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Gradle Plugin Portal
        id: plugin_portal
        continue-on-error: true
        timeout-minutes: 10
        run: |
          echo "🔌 Publishing to Gradle Plugin Portal..."
          ./gradlew publishPlugins --info
        env:
          CI: true
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}

      - name: Generate deployment summary
        if: always()
        run: |
          echo "## 📦 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Get version info
          VERSION=$(./gradlew properties -q | grep "^version:" | cut -d: -f2 | tr -d ' ')
          echo "🏷️ **Version**: \`$VERSION\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Release type
          if [ "${{ steps.release_type.outputs.is_prerelease }}" = "true" ]; then
            echo "📋 **Release Type**: Pre-release (alpha/beta/rc)" >> $GITHUB_STEP_SUMMARY
          else
            echo "📋 **Release Type**: Stable release" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Maven Central Status
          echo "### 🌍 Maven Central" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.maven_central.outcome }}" = "success" ]; then
            echo "✅ **Status**: Successfully published" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.maven_central.outcome }}" = "failure" ]; then
            echo "⚠️ **Status**: Deployment initiated (timeout is normal)" >> $GITHUB_STEP_SUMMARY
            echo "🔄 **Background**: Maven Central is processing your deployment" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Status**: Failed to publish" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Plugin Portal Status
          echo "### 🔌 Gradle Plugin Portal" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.plugin_portal.outcome }}" = "success" ]; then
            echo "✅ **Status**: Successfully published" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.plugin_portal.outcome }}" = "failure" ]; then
            echo "❌ **Status**: Failed to publish" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Status**: Not attempted" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Usage instructions
          echo "### 📋 Usage Instructions" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Plugin Portal (Recommended - Clean Syntax):**" >> $GITHUB_STEP_SUMMARY
          echo '```kotlin' >> $GITHUB_STEP_SUMMARY
          echo 'plugins {' >> $GITHUB_STEP_SUMMARY
          echo "    id(\"dev.coretide.armor\") version \"$VERSION\"" >> $GITHUB_STEP_SUMMARY
          echo '}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "**Maven Central (Legacy Syntax):**" >> $GITHUB_STEP_SUMMARY
          echo '```kotlin' >> $GITHUB_STEP_SUMMARY
          echo 'buildscript {' >> $GITHUB_STEP_SUMMARY
          echo '    dependencies {' >> $GITHUB_STEP_SUMMARY
          echo "        classpath(\"dev.coretide.plugin:code-armor-plugin:$VERSION\")" >> $GITHUB_STEP_SUMMARY
          echo '    }' >> $GITHUB_STEP_SUMMARY
          echo '}' >> $GITHUB_STEP_SUMMARY
          echo 'apply(plugin = "dev.coretide.armor")' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Links
          echo "### 🔗 Links" >> $GITHUB_STEP_SUMMARY
          echo "- [🔌 Gradle Plugin Portal](https://plugins.gradle.org/plugin/dev.coretide.armor)" >> $GITHUB_STEP_SUMMARY
          echo "- [📦 Maven Central Search](https://central.sonatype.com/search?q=dev.coretide.plugin)" >> $GITHUB_STEP_SUMMARY
          echo "- [📄 GitHub Release](https://github.com/coretide/coretide-armor-plugin/releases/tag/${{ steps.release_type.outputs.tag_name }})" >> $GITHUB_STEP_SUMMARY

      - name: Set final status
        if: always()
        run: |
          echo "🎯 DEPLOYMENT COMPLETED"
          echo "======================"
          echo "Maven Central: ${{ steps.maven_central.outcome }}"
          echo "Plugin Portal: ${{ steps.plugin_portal.outcome }}"
          echo ""
          echo "✅ Deployment workflow completed successfully!"
          exit 0
